#!/usr/bin/env python

EnsureSConsVersion(3, 0, 0)
EnsurePythonVersion(3, 9)

import os

env = Environment(ENV = os.environ)

def makegodot():
  customgdargs: dict = {"precision": "double", "module_mono_enabled": "yes"}
  for key in ARGUMENTS:
    if key.startswith("gds_"):
      customgdargs[key[4:]] = ARGUMENTS[key]

  customgdargsstr: str = ""

  for key in customgdargs:
    customgdargsstr += key + "=" + str(customgdargs[key]) + " "

  env.Command(
    target = 'godot_engine_binary', 
    source = 'godot/SConstruct', 
    action = [f'cd Server/godot && scons {customgdargsstr}']) # Hacky? Yes, should've used CMake...

  env.Command(
    target = 'godot_engine_managedlib', 
    source = 'godot/SConstruct', 
    action = [f'cd Server/godot && ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --precision=double --push-nupkgs-local ../Nuget-Source'])

  env.Command(
    target = 'godot_engine_gluecode', 
    source = 'godot/SConstruct', 
    action = [f'cd Server/godot && ./bin/godot.linuxbsd.editor.double.x86_64.mono --headless --generate-mono-glue modules/mono/glue'])

makegodot()